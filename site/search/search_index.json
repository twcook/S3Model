{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Shareable, Structured, Semantic Model (S3Model)","text":"<p>The Esperanto of Information Management.</p>"},{"location":"#reference-implementation","title":"Reference Implementation","text":"<p>Release - 4.0.0</p> <p>Semantic == Every component part of the data model may contain one or more URIs to ontologies, controlled vocabularies, policy guideline, etc. Any data item can have it's meaning defined in the model by anything with a URI.</p> <p>Structured == Every valid data model exhibits a well defined structure based on a robust reference model.</p> <p>Sharable == The data model author(s) can easily share their models using an industry standard format. The data consumer can easily import/implement this model into their systems.</p>"},{"location":"Contributing/","title":"Contributing","text":"<p>When contributing to this repository, please first discuss the change you wish to make via a repository issue with the owners of this repository before making a change.</p> <p>Please note we have a code of conduct, please follow it in all your interactions with the project.</p>"},{"location":"Contributing/#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Ensure any install or build dependencies are removed before the end of the layer when doing a    build.</li> <li>Update the README.md with details of changes to the interface, this includes new environment    variables, exposed ports, useful file locations and container parameters.</li> <li>Increase the version numbers in any examples files and the README.md to the new version that this    Pull Request would represent. The versioning scheme we use is SemVer.</li> <li>You may merge the Pull Request in once you have the sign-off of two other developers, or if you    do not have permission to do that, you may request the second reviewer to merge it for you.</li> <li>Be certain that the related version of S3MPython is correct in the README.md</li> </ol>"},{"location":"Contributing/#code-of-conduct","title":"Code of Conduct","text":""},{"location":"Contributing/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"Contributing/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic   address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"Contributing/#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"Contributing/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"Contributing/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at admin@datainsights.tech. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>"},{"location":"Contributing/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at http://contributor-covenant.org/version/1/4</p>"},{"location":"LICENSE/","title":"License","text":"<pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <pre><code>  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n</code></pre> <p>Copyright [yyyy] [name of copyright owner]</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\");    you may not use this file except in compliance with the License.    You may obtain a copy of the License at</p> <pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</p>"},{"location":"front/","title":"Documentation Overview","text":"<p>Turning data into information</p> <p>Use the Table of Contents on the left for navigation.</p> <p>The goal of S3Model is to be Minimalistic, Sustainable, Interoperable AND Implementable.</p>"},{"location":"front/#error-reporting","title":"Error Reporting","text":"<p>Please report all issues here.</p>"},{"location":"front/#compliance","title":"Compliance","text":"<p>This is the reference implementation of the S3Model Specifications and is fully in compliance with release 4.0.0 of the specifications.</p> <p>The ninety and nine are with dreams, content but the hope of the world made new, is the hundredth man who is grimly bent on making those dreams come true. - Edgar Alan Poe</p>"},{"location":"glossary/","title":"Glossary","text":"<p>While many terms have more than one definition. The definitions presented here are in the context of managing data, especially in the S3Model context.</p>"},{"location":"glossary/#abstract-model","title":"Abstract Model","text":"<p>An Abstract Model as defined in the field of software engineering and data modeling, an information model is usually an abstract, formal representation of entity types that may include their properties, relationships and the operations that can be performed on them. The entity types in the model may be kinds of real-world objects, such as devices in a network, or occurrences, or they may themselves be abstract, such as for the entities used in a billing system. Typically, they are used to model a constrained domain that can be described by a closed set of entity types, properties, relationships and operations.</p>"},{"location":"glossary/#artificial-intelligence-ai","title":"Artificial Intelligence (AI)","text":"<p>An area of computer science that deals with giving machines the ability to seem like they have human intelligence. Also, the power of a machine to copy intelligent human behavior.</p>"},{"location":"glossary/#business-decision-makers","title":"Business Decision Makers","text":"<p>Business Decision Makers often come with titles like CEO, COO, CFO, etc. However, anyone with budget control authority can be considered a decision maker. For more information click here.</p>"},{"location":"glossary/#canonical-serialization","title":"Canonical Serialization","text":"<p>A Canonical Serialization is an instantiation of some information in a specific file format. Usually it is in a standardized format and adheres to a specification. The word canonical means it is considered the law for the subject at hand. In the context of S3Model, the XML Schema representing the reference model, means that any other implementation in any programming or data definition language must comply with the rules and constraints of the XML Schema implementation.</p>"},{"location":"glossary/#compliance","title":"Compliance","text":"<p>Compliance is the practice of following regulations set forth by corporate governance, industry organizations, and governments. These regulations set forth protocols for how sensitive data is collected, used, stored, and managed, among other requirements.</p>"},{"location":"glossary/#computable-models","title":"Computable models","text":"<p>Computable models in this context, are data models that can be used to validate data and insure data compliance based on the structure and rules contained within the data model.</p>"},{"location":"glossary/#constraint","title":"Constraint","text":"<p>A constraint is simply a limitation or restriction. In the context of S3Model, constraints are mapped to the XML Schema constraint model. These constraints are sometimes referred to as restrictions or facets.</p>"},{"location":"glossary/#contextual","title":"Contextual","text":"<p>Contextual - Contextual means to view information as a whole- both the facts and where they came from.</p>"},{"location":"glossary/#collision-resistant-unique-identifier-mcuid","title":"Collision-Resistant Unique Identifier (MCUID)","text":"<p>A CUID as used in S3Model provides a globally unique identifier for each model component and each data model.</p>"},{"location":"glossary/#data-model-dm","title":"Data Model (DM)","text":"<p>This component is a domain concept data model that is created by expressing constraints on a generic reference model. In the S3Model reference implementation eco-system, these constraints are formed through the use of the XML Schema complexTypes using the restriction element with its base attribute set to the appropriate RM complexType. DMs are immutable, once published they are never edited because once data is released in conformance with a DM, this is where the sharable semantics are located.</p> <p>DMs are uniquely identified by the prefix 'dm-' followed by a CUID. They are valid against one version of the S3Model Reference Model XML Schema identified by the import element in the header. This design gives them temporal durability and prevents the requirement ever to migrate instance data. The result of this approach is that all data, for all time , in all contexts, can be maintained with complete syntactic integrity and full semantics. The semantics for a concept modeled as a DM is represented using Semantic Web technologies. The DM identifier is the subject in each of the Subject, Predicate, Object RDF statements.</p> <ul> <li>In the reference implementation this will be an XML Schema that imports the Refernce Model schema.</li> <li>In Python it is a Python file that imports the Python Reference Model.</li> </ul>"},{"location":"glossary/#data-model-id","title":"Data Model ID","text":"<p>The data model ID is a unique identifier for each and every data model created in the S3Model ecosystem. No identifier can be duplicated because of the construction method. All identifiers in S3Model uses a Collision Resistant Unique Identifier (CUID) preceeded by the characters dm-.</p> <p>There are ports to virtually all programming languages, you can also get them online here.</p>"},{"location":"glossary/#data-instance","title":"Data Instance","text":"<p>A Data Instance is specific file or database entry that contains information based on some model. Examples include; an XML file, a JSON file, a row and its relations in a SQL database, a text file from an editor, or other concrete entity.</p>"},{"location":"glossary/#data-modeling","title":"Data Modeling","text":"<p>Data Modeling is the process of conceptualizing a data model (or datamodel) as an abstract model that organizes elements of data and standardizes how they relate to one another and to the properties of real-world entities.</p>"},{"location":"glossary/#data-analyst","title":"Data Analyst","text":"<p>Data analysts use machine learning and AI tools to answer business questions.</p>"},{"location":"glossary/#data-scientist","title":"Data Scientist","text":"<p>Data scientists typically spend more time modeling data and building analytic tools.</p>"},{"location":"glossary/#domain-expert","title":"Domain Expert","text":"<p>A domain expert is a person with special knowledge or skills in a particular area of endeavor. An accountant is an expert in the domain of accountancy, for example. The development of accounting software requires knowledge in two different domains, namely accounting and software.</p>"},{"location":"glossary/#esperanto","title":"Esperanto","text":"<p>Esperanto is an artificial language devised in 1887 as an international medium of communication, based on roots from the chief European languages. Majority of the speakers are found in the United Kingdom, Belgium, Brazil, United States, Poland, Italy, Germany and France. Surprisingly, there are also many Esperanto speakers in China and Japan. Dr. Zamenhof created the language to fight nationalism and boost internationalism and mutual understanding.</p>"},{"location":"glossary/#graph-database","title":"Graph Database","text":"<p>A graph database* stores nodes and relationships instead of tables, or documents. Data is stored just like you might sketch ideas on a whiteboard. Your data is stored without restricting it to a pre-defined model, allowing a very flexible way of thinking about and using it. It must be noted that not having a pre-defined model has many drawbacks, lack of data validation being a major one. S3Model provides a mechanism to have a strong model and still store your data as a knowledge graph.</p>"},{"location":"glossary/#javascript-object-notation-json","title":"JavaScript Object Notation (JSON)","text":"<p>JSON is a standard text-based format for representing structured data based on JavaScript object syntax. It is commonly used for transmitting data in web applications (e.g., sending some data from the server to the client, so it can be displayed on a web page, or vice versa).</p>"},{"location":"glossary/#linked-data","title":"Linked Data","text":"<p>Linked Data lies at the heart of what the Semantic Web (Web 2.0) is all about: large scale integration of, and reasoning on, data on the Web. Almost all applications listed in, say collection of Semantic Web Case Studies and Use Cases are essentially based on the accessibility of, and integration of Linked Data at various level of complexities.</p>"},{"location":"glossary/#model-component-mc","title":"Model Component (MC)","text":"<p>The name comes from the fact that it is a complete XML Schema complexType that represents a simple concept and that it can be reused in any DM. This reuse is due to the use of CUIDs for the complexType name attribute. Since complexType names must begin with an alphabetic character, all S3Model RMC names start with the prefix 'mc-' followed by the CUID. This naming convention facilitates the association with public element names in instances since they reuse the CUID but have a prefix of 'ms-' (Model Symbol) in place of the 'mc-.' The use of a CUID allows the constraint on a reference model type to be reused many times in a DM with different parameters such as enumeration constraints. The semantics for a concept modeled as an MC is represented using Semantic Web technologies. The MC name is the subject in each of the Subject, Predicate, Object RDF statements.</p>"},{"location":"glossary/#multi-level-healthcare-information-modeling-mlhim","title":"Multi-Level Healthcare Information Modeling (MLHIM)","text":"<p>The academic MLHIM project was hosted at Universidade do Estado do Rio de Janeiro (UERJ). The initial multi-level concepts were based on the openEHR specifications. The project members addressed many of the short-comings in openEHR during the interations of MLHIM. However, MLHIM like openEHR was healthcare domain specific. Once the MLHIM project ended, a few members took the successes and developed S3Model as a domain independent solution to semantic interoperability.</p>"},{"location":"glossary/#ontology","title":"Ontology","text":"<p>An Ontology is a set of concepts and categories in a subject area or domain that shows their properties and the relations between them. One major advantage of using a domain ontology is its ability to define a semantic model of the data combined with the associated domain knowledge. Ontologies can also be used to define links between different types of semantic knowledge. Thus, ontologies can be used in formulating data analysis strategies.</p>"},{"location":"glossary/#web-ontology-language-owl","title":"Web Ontology Language (OWL)","text":"<p>The W3C Web Ontology Language (OWL) is a Semantic Web language designed to represent rich and complex knowledge about things, groups of things, and relations between things.</p>"},{"location":"glossary/#predictive-model","title":"Predictive Model","text":"<p>Predictive modeling is a commonly used statistical technique to predict future behavior. In predictive modeling, data is collected, a statistical model is formulated, predictions are made, and the model is validated (or revised) as additional data becomes available.</p>"},{"location":"glossary/#resource-description-framework-rdf","title":"Resource Description Framework (RDF)","text":"<p>RDF is a standard model for data interchange on the Web. Although frequently referred to as a language, RDF is mainly a data model. It is based on the idea that the things being described have properties, which have values, and that resources can be described by making statements. These statements consist of three components; a subject, a predicate, and an object. It should be noted that RDF is also a vocabulary that along with the RDFS vocabulary provides a set of terms that can be used for creating general/abstract descriptions of resources. OWL is a vocabulary built with RDF and RDFS vocabularies that provide new terms for creating more detailed descriptions of resources.</p>"},{"location":"glossary/#reference-model-rm","title":"Reference Model (RM)","text":"<p>The RM is a small set of structurally oriented concept definitions that allow for building arbitrarily complex models without introducing domain semantics into the structure. Domain concepts are modeled as restrictions on these RM concepts. The RM, therefore, defines a standard set of ideas that allow for query and knowledge discovery across data without prior knowledge of the actual content.</p>"},{"location":"glossary/#shareable-structured-semantic-model-s3model","title":"Shareable-Structured-Semantic Model (S3Model)","text":"<p>Shareable-Structured-Semantic Model (S3Model) is an open source/open content project with the goal of solving the cross-domain information, semantic interoperability problem.</p> <p>It uses a multi-level information modeling approach in combination with widely available tools and language infrastructure to allow the exchange of the syntactic and semantic information along with data.</p> <p>S3Model is a modeling approach that includes a comprehensive reference model. Data Models are created by domain experts or other interested individuals that want to model some data. By creating this data model, the creator can be sure that when they send their data to a downstream user, such as an analyst, that user will have all of the computable, contextual information they need to understand the origin and meaning of the data.</p>"},{"location":"glossary/#semantic-interoperability","title":"Semantic Interoperability","text":"<p>Semantic interoperability denotes the ability of different applications and business partners to understand exchanged data in a similar way, implying a precise and unambiguous meaning of the exchanged information.</p>"},{"location":"glossary/#semantic-web","title":"Semantic Web","text":"<p>The Semantic Web is a proposed development of the World Wide Web in which data in web pages is structured and tagged in such a way that it can be read directly by computers. The same technologies may be applied to any data. The W3C website has more details.</p>"},{"location":"glossary/#structured-query-language-sql","title":"Structured Query Language (SQL)","text":"<p>A data definition and manipulation language for relational databases.</p>"},{"location":"glossary/#sql-database","title":"SQL Database","text":"<p>Also known as relational databases. A SQL database is a collection of tables that stores a specific set of structured data.</p>"},{"location":"glossary/#upper-ontology","title":"Upper Ontology","text":"<p>An upper ontology (also known as a top-level ontology, upper model, or foundation ontology) is an ontology (in the sense used in information science) which consists of very general terms (such as \"object\", \"property\", \"relation\") that are common across all domains. An important function of an upper ontology is to support broad semantic interoperability among a large number of domain-specific ontologies by providing a common starting point for the formulation of definitions. Terms in the domain ontology are ranked under the terms in the upper ontology, e.g., the upper ontology classes are superclasses or supersets of all the classes in the domain ontologies.</p>"},{"location":"glossary/#validation","title":"Validation","text":"<p>Validation means checking the accuracy and quality of source data before using, importing or otherwise processing data. Different types of validation can be performed depending on destination constraints or objectives. For example, you could use data validation to make sure a value is a number between 1 and 6, make sure a date occurs in the next 30 days, or make sure a text entry is less than 25 characters.</p>"},{"location":"glossary/#validation-chain","title":"Validation Chain","text":"<p>A validation chain is a series of complimentary components that serve to perform validation.</p>"},{"location":"glossary/#extensible-markup-language-xml","title":"eXtensible Markup Language (XML)","text":"<p>XML is a markup language expressed in a standard set of codes, or tags, that describes the text in a digital document. XML is a more flexible cousin of HTML, makes it possible to conduct complex business over the Internet.</p>"},{"location":"glossary/#extensible-markup-language-database","title":"eXtensible Markup Language Database","text":"<p>An XML database is a database that stores data in XML format. This type of database is suited for businesses with data in XML format and for situations where XML storage is a practical way to archive data, metadata and other digital resources.</p>"},{"location":"rm/","title":"The Reference Implementation of the S3Model Reference Model","text":"<p>S3Model may be implemented in most programming or data definition languages.</p> <p>The reference implementation is built in XML Schema. This is due to the ubiquitous nature of XML across industries, the compatibility with RDF/XML RDF serialization allowing embedding of the semantics into the structured schema. All of these technologies, including OWL and JSON-LD already use XML Schema datatypes so this reduces the technology and mental overhead of the stack.</p> <p>Virtually all modern programming and data analysis languages can manipulate and validate XML content.</p> <p>The catalog system in XML solves many issues around namespacing and network latency by allowing local persistence of schemas and documents even though the namespace of items may be referenced to a remote locations.</p> <p>Diagramatic documentation of the Reference Model schema can be reviewed at the link below.</p> <p>Reference Model Technical Schema Docs</p>"},{"location":"rm/#distribution-layout","title":"Distribution Layout","text":"<p>The directory tree contains several files and directories:</p> <ul> <li> <p>The scripts directory content is described in the Additional Tools section</p> </li> <li> <p>The RM (reference model) directory contains one or more versioned subdirectories where the actual XML Schema and associated files are located. This directory also contains the S3Model ontology file s3model.owl.</p> </li> <li> <p>The 4_0_0 directory is the only versioned reference model in this distribution. Previous versions were removed. This directory contains:</p> </li> <li> <p>the XML Schema, s3model_4_0_0.xsd which is the reference implementation of the S3Model specifications,</p> </li> <li>the s3model_4_0_0.rdf file of the triples that were extracted from the XML Schema using the rm_semantics_extractor.py tool.</li> <li>the file s3model_4_0_0.xsl can be used to help visualize s3model_4_0_0.xsd in a browser</li> <li>and the dm-desciption.xsl can be used to visualize data model schemas as html pages.</li> <li>s3model_4_0_0.xsd is the schema that is required by all S3Model Data Models using the xs:include directive as shown here:</li> </ul> <pre><code>  &lt;xs:include schemaLocation=\"https://www.s3model.com/ns/s3m/s3model_4_0_0.xsd\"&gt;\n\n</code></pre>"},{"location":"rm/#examples","title":"Examples","text":"<p>The examples directory contains some simplistic versions of a data model schema and example RDF extract and instance documents. These were created using the S3ModelTools.</p>"},{"location":"support/","title":"Support, Publications &amp; Social Media","text":"<p>Publications, tutorials and presentations by the developers of S3Model and other interested parties that relate to S3Model.</p>"},{"location":"support/#peer-reviewed-papers","title":"Peer Reviewed Papers","text":"<p>See these Documents for the background research documents.</p> <p>Multi-Level Healthcare Information (MLHIM):</p> <pre><code>\nMLHIM was the academic research proof of concept that is the predecessor to S3Model.\n\n</code></pre> <ul> <li>Migration of a pre-hospital cardiology emergency system from data model to multilevel modeling</li> <li>Semantic interoperability of controlled vocabularies in medicine: A case study of the International Statistical Classification of Diseases 'Tuberculosis' subset</li> <li>Knowledge engineering of healthcare applications based on minimalist multilevel models</li> <li>Constraint Definition Generator: an Open Source Tool for Multilevel Modeling of Healthcare Information Systems</li> <li>Providing full semantic interoperability for the fast healthcare interoperability resources schemas with resource description framework</li> <li>Use of XML Schema Definition for the development of semantically interoperable healthcare applications</li> <li>Knowledge management of controlled vocabularies for semantic interoperability of healthcare applications</li> <li>Health informatics: the relevance of open source and multilevel modeling</li> <li>A Multilevel-Model Driven Social Network for Healthcare Information Exchange.</li> <li>Convergence of health level seven version 2 messages to semantic web technologies for software-intensive systems in telemedicine trauma care</li> <li>Harmoniza\u00e7\u00e3o de terminologias de enfermagem mediada por modelagem multin\u00edvel: um estudo de caso</li> <li>Tecnologias XML para a interoperabilidade sem\u00e2ntica em sa\u00fade: referencial te\u00f3rico e implementa\u00e7\u00e3o</li> <li>Implementing a specification for exceptional data in multilevel modeling of healthcare applications</li> <li>Modeling of nursing knowledge for multilevel information systems</li> </ul> <p>Citations:</p> <ul> <li>FHIRForm: An Open-Source Framework for the Management of Electronic Forms in Healthcare.</li> </ul> <pre><code>\n                      There may be additional citations.\n\n</code></pre>"},{"location":"support/#presentations","title":"Presentations","text":"<ul> <li>SlideShare</li> </ul>"},{"location":"support/#videos","title":"Videos","text":"<ul> <li>These are very dated and will be replaced in 2023. YouTube</li> </ul>"},{"location":"support/#issues-reporting","title":"Issues Reporting","text":"<ul> <li>Please report all issues here.</li> </ul>"},{"location":"support/#social-media","title":"Social Media","text":"<ul> <li>Twitter - S3Model</li> </ul>"},{"location":"tools/","title":"Additional Tools","text":"<p>The reference implementation also provides a few simple tools in Python that can be used to manipulate and analyze the refernce model implementation and support files such as the ontology and RDF output.</p> <p>You will find them in the scripts subdirectory of the versioned RM. Ex: RM/3_1_0/scripts.</p>"},{"location":"tools/#using-the-tools","title":"Using the tools","text":"<p>You need to install the requirements in a virtual environment before using these tools. If you do not already have a favorite approach to Python virtual environments then the best way is to use Anaconda. </p> <p>Download and install a distribution for your operating system.</p> <p>Then in a terminal window execute:</p> <pre><code>conda env create -f environment.yml\n</code></pre> <p>Then follow the instructions to activate the S3Model environment.</p>"},{"location":"tools/#data_semantics_extractorpy","title":"data_semantics_extractor.py","text":"<p>Extracts S3Model 3.1.0 (and later) data and creates RDF triples in RDF/XML This script must be executed after the dm_semantics_extractor.py script.</p>"},{"location":"tools/#demo_data_genpy","title":"demo_data_gen.py","text":"<p>Can be used to create multiple copies of DM based data files to use for examples or stress testing your RDF store. Pass the number of copies per example on the commandline.</p>"},{"location":"tools/#dm_semantics_extractorpy","title":"dm_semantics_extractor.py","text":"<p>Extracts the semantics from S3Model DMs in the directory passed on the commandline and creates RDF triples in RDF/XML format. It reuses the filename and replaces '.xsd' with '.rdf'</p>"},{"location":"tools/#rm_semantics_extractorpy","title":"rm_semantics_extractor.py","text":"<p>Extracts the semantics from S3Model RM and creates RDF triples in RDF/XML named the same as the input file with a .rdf extension in place of the .xsd extension.</p>"}]}